<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>