<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>